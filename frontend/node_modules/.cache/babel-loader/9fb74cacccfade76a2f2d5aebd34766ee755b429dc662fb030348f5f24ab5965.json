{"ast":null,"code":"var _jsxFileName = \"/Users/keshavdave/Desktop/Keshav_Dave_FullStackCodingChallenge_Lumaa/frontend/src/components/Tasks.tsx\",\n  _s = $RefreshSig$();\n// 🔧 Updated Backend (tasks.ts) with Debug Logs\n\nimport { Router } from 'express';\nimport { pool } from '../db';\nimport { authenticateToken } from '../middleware/authenticate';\nconst router = Router();\n\n// 🔍 GET tasks for logged-in user\nrouter.get('/', authenticateToken, async (req, res, next) => {\n  console.log('GET /tasks called');\n  try {\n    const {\n      user\n    } = req;\n    const userId = user === null || user === void 0 ? void 0 : user.id;\n    console.log(`User ID extracted: ${userId}`);\n    if (!userId) return res.status(401).json({\n      error: 'Unauthorized'\n    });\n    const tasks = await pool.query('SELECT * FROM tasks WHERE \"userId\" = $1', [userId]);\n    console.log('Tasks fetched from DB:', tasks.rows);\n    res.json(tasks.rows);\n  } catch (err) {\n    console.error('❌ Error fetching tasks:', err);\n    next(err);\n  }\n});\n\n// ✍️ POST new task for logged-in user\nrouter.post('/', authenticateToken, async (req, res, next) => {\n  console.log('POST /tasks called:', req.body);\n  const {\n    title,\n    description\n  } = req.body;\n  const {\n    user\n  } = req;\n  const userId = user === null || user === void 0 ? void 0 : user.id;\n  if (!userId) return res.status(401).json({\n    error: 'Unauthorized'\n  });\n  try {\n    const result = await pool.query('INSERT INTO tasks (title, description, \"userId\", \"isComplete\") VALUES ($1, $2, $3, $4) RETURNING *', [title, description, userId, false]);\n    console.log('Task created:', result.rows[0]);\n    res.status(201).json(result.rows[0]);\n  } catch (err) {\n    console.error('❌ Error creating task:', err);\n    next(err);\n  }\n});\n\n// 📝 PUT (Update) existing task for logged-in user\nrouter.put('/:id', authenticateToken, async (req, res, next) => {\n  console.log('PUT /tasks/:id called:', req.params, req.body);\n  const {\n    id\n  } = req.params;\n  const {\n    title,\n    description,\n    isComplete\n  } = req.body;\n  const {\n    user\n  } = req;\n  const userId = user === null || user === void 0 ? void 0 : user.id;\n  if (!userId) return res.status(401).json({\n    error: 'Unauthorized'\n  });\n  try {\n    const result = await pool.query('UPDATE tasks SET title = COALESCE($1, title), description = COALESCE($2, description), \"isComplete\" = COALESCE($3, \"isComplete\") WHERE id = $4 AND \"userId\" = $5 RETURNING *', [title, description, isComplete, id, userId]);\n    console.log('Task updated:', result.rows[0]);\n    res.json(result.rows[0]);\n  } catch (err) {\n    console.error('❌ Error updating task:', err);\n    next(err);\n  }\n});\n\n// 🗑 DELETE task for logged-in user\nrouter.delete('/:id', authenticateToken, async (req, res, next) => {\n  console.log('DELETE /tasks/:id called:', req.params);\n  const {\n    id\n  } = req.params;\n  const {\n    user\n  } = req;\n  const userId = user === null || user === void 0 ? void 0 : user.id;\n  if (!userId) return res.status(401).json({\n    error: 'Unauthorized'\n  });\n  try {\n    const result = await pool.query('DELETE FROM tasks WHERE id = $1 AND \"userId\" = $2 RETURNING *', [id, userId]);\n    console.log('Task deleted:', result.rows[0]);\n    res.json({\n      message: 'Task deleted successfully'\n    });\n  } catch (err) {\n    console.error('❌ Error deleting task:', err);\n    next(err);\n  }\n});\nexport default router;\n\n// 🎨 Updated Frontend (Tasks.tsx) with Debug Logs\n\nimport React, { useState, useEffect } from 'react';\nimport API from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const navigate = useNavigate();\n  const fetchTasks = async () => {\n    console.log('Fetching tasks...');\n    try {\n      const {\n        data\n      } = await API.get('/tasks');\n      console.log('Tasks fetched:', data);\n      setTasks(data);\n    } catch (err) {\n      console.error('Failed to fetch tasks:', err);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const handleAddTask = async () => {\n    console.log('Adding task:', title, description);\n    if (!title || !description) return;\n    try {\n      const {\n        data\n      } = await API.post('/tasks', {\n        title,\n        description\n      });\n      console.log('Task added:', data);\n      setTasks(prev => [...prev, data]);\n      setTitle('');\n      setDescription('');\n    } catch (err) {\n      console.error('Failed to add task:', err);\n    }\n  };\n  const handleDeleteTask = async id => {\n    console.log('Deleting task with id:', id);\n    try {\n      await API.delete(`/tasks/${id}`);\n      console.log(`Task ${id} deleted successfully`);\n      setTasks(prev => prev.filter(task => task.id !== id));\n    } catch (err) {\n      console.error('Failed to delete task:', err);\n    }\n  };\n  const handleLogout = () => {\n    console.log('Logging out...');\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, \" - \", task.description, \" (\", task.isComplete ? '✅ Complete' : '❌ Incomplete', \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 15\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 5\n  }, this);\n};\n_s(Tasks, \"NH8FQiz1TljC4H05Ut5GwCf56zI=\", false, function () {\n  return [useNavigate];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["Router","pool","authenticateToken","router","get","req","res","next","console","log","user","userId","id","status","json","error","tasks","query","rows","err","post","body","title","description","result","put","params","isComplete","delete","message","React","useState","useEffect","API","useNavigate","jsxDEV","_jsxDEV","Tasks","_s","setTasks","setTitle","setDescription","navigate","fetchTasks","data","handleAddTask","prev","handleDeleteTask","filter","task","handleLogout","localStorage","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/keshavdave/Desktop/Keshav_Dave_FullStackCodingChallenge_Lumaa/frontend/src/components/Tasks.tsx"],"sourcesContent":["// 🔧 Updated Backend (tasks.ts) with Debug Logs\n\nimport { Router, Request, Response, NextFunction } from 'express';\nimport { RequestHandler } from 'express';\nimport { pool } from '../db';\nimport { authenticateToken } from '../middleware/authenticate';\n\ninterface AuthenticatedRequest extends Request {\n  user?: { id: number; username: string };\n}\n\nconst router: Router = Router();\n\n// 🔍 GET tasks for logged-in user\nrouter.get('/', authenticateToken, (async (req, res, next) => {\n  console.log('GET /tasks called');\n  try {\n    const { user } = req as AuthenticatedRequest;\n    const userId = user?.id;\n\n    console.log(`User ID extracted: ${userId}`);\n    if (!userId) return res.status(401).json({ error: 'Unauthorized' });\n\n    const tasks = await pool.query('SELECT * FROM tasks WHERE \"userId\" = $1', [userId]);\n    console.log('Tasks fetched from DB:', tasks.rows);\n    res.json(tasks.rows);\n  } catch (err) {\n    console.error('❌ Error fetching tasks:', err);\n    next(err);\n  }\n}) as RequestHandler);\n\n// ✍️ POST new task for logged-in user\nrouter.post('/', authenticateToken, (async (req, res, next) => {\n  console.log('POST /tasks called:', req.body);\n  const { title, description } = req.body;\n  const { user } = req as AuthenticatedRequest;\n  const userId = user?.id;\n\n  if (!userId) return res.status(401).json({ error: 'Unauthorized' });\n\n  try {\n    const result = await pool.query(\n      'INSERT INTO tasks (title, description, \"userId\", \"isComplete\") VALUES ($1, $2, $3, $4) RETURNING *',\n      [title, description, userId, false]\n    );\n    console.log('Task created:', result.rows[0]);\n    res.status(201).json(result.rows[0]);\n  } catch (err) {\n    console.error('❌ Error creating task:', err);\n    next(err);\n  }\n}) as RequestHandler);\n\n// 📝 PUT (Update) existing task for logged-in user\nrouter.put('/:id', authenticateToken, (async (req, res, next) => {\n  console.log('PUT /tasks/:id called:', req.params, req.body);\n  const { id } = req.params;\n  const { title, description, isComplete } = req.body;\n  const { user } = req as AuthenticatedRequest;\n  const userId = user?.id;\n\n  if (!userId) return res.status(401).json({ error: 'Unauthorized' });\n\n  try {\n    const result = await pool.query(\n      'UPDATE tasks SET title = COALESCE($1, title), description = COALESCE($2, description), \"isComplete\" = COALESCE($3, \"isComplete\") WHERE id = $4 AND \"userId\" = $5 RETURNING *',\n      [title, description, isComplete, id, userId]\n    );\n    console.log('Task updated:', result.rows[0]);\n    res.json(result.rows[0]);\n  } catch (err) {\n    console.error('❌ Error updating task:', err);\n    next(err);\n  }\n}) as RequestHandler);\n\n// 🗑 DELETE task for logged-in user\nrouter.delete('/:id', authenticateToken, (async (req, res, next) => {\n  console.log('DELETE /tasks/:id called:', req.params);\n  const { id } = req.params;\n  const { user } = req as AuthenticatedRequest;\n  const userId = user?.id;\n\n  if (!userId) return res.status(401).json({ error: 'Unauthorized' });\n\n  try {\n    const result = await pool.query(\n      'DELETE FROM tasks WHERE id = $1 AND \"userId\" = $2 RETURNING *',\n      [id, userId]\n    );\n    console.log('Task deleted:', result.rows[0]);\n    res.json({ message: 'Task deleted successfully' });\n  } catch (err) {\n    console.error('❌ Error deleting task:', err);\n    next(err);\n  }\n}) as RequestHandler);\n\nexport default router;\n\n\n// 🎨 Updated Frontend (Tasks.tsx) with Debug Logs\n\nimport React, { useState, useEffect } from 'react';\nimport API from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Task {\n  id: number;\n  title: string;\n  description: string;\n  isComplete: boolean;\n}\n\nconst Tasks: React.FC = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const navigate = useNavigate();\n\n  const fetchTasks = async () => {\n    console.log('Fetching tasks...');\n    try {\n      const { data } = await API.get('/tasks');\n      console.log('Tasks fetched:', data);\n      setTasks(data);\n    } catch (err) {\n      console.error('Failed to fetch tasks:', err);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const handleAddTask = async () => {\n    console.log('Adding task:', title, description);\n    if (!title || !description) return;\n    try {\n      const { data } = await API.post('/tasks', { title, description });\n      console.log('Task added:', data);\n      setTasks((prev) => [...prev, data]);\n      setTitle('');\n      setDescription('');\n    } catch (err) {\n      console.error('Failed to add task:', err);\n    }\n  };\n\n  const handleDeleteTask = async (id: number) => {\n    console.log('Deleting task with id:', id);\n    try {\n      await API.delete(`/tasks/${id}`);\n      console.log(`Task ${id} deleted successfully`);\n      setTasks((prev) => prev.filter((task) => task.id !== id));\n    } catch (err) {\n      console.error('Failed to delete task:', err);\n    }\n  };\n\n  const handleLogout = () => {\n    console.log('Logging out...');\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  return (\n    <div>\n      <h2>Tasks</h2>\n      <button onClick={handleLogout}>Logout</button>\n      {tasks.length === 0 ? (\n        <p>No tasks</p>\n      ) : (\n        <ul>\n          {tasks.map((task) => (\n            <li key={task.id}>\n              {task.title} - {task.description} ({task.isComplete ? '✅ Complete' : '❌ Incomplete'})\n              <button onClick={() => handleDeleteTask(task.id)}>Delete</button>\n            </li>\n          ))}\n        </ul>\n      )}\n      <h3>Add Task</h3>\n      <input placeholder=\"Title\" value={title} onChange={(e) => setTitle(e.target.value)} />\n      <input placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} />\n      <button onClick={handleAddTask}>Add Task</button>\n    </div>\n  );\n};\n\nexport default Tasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}