{"ast":null,"code":"var _jsxFileName = \"/Users/keshavdave/Desktop/Keshav_Dave_FullStackCodingChallenge_Lumaa/frontend/src/components/Tasks.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport API from '../services/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Tasks() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const navigate = useNavigate();\n  const fetchTasks = async () => {\n    const res = await API.get('/tasks');\n    setTasks(res.data);\n  };\n  const addTask = async () => {\n    await API.post('/tasks', {\n      title,\n      description\n    });\n    fetchTasks();\n  };\n  const updateTask = async (id, isComplete) => {\n    await API.put(`/tasks/${id}`, {\n      isComplete\n    });\n    fetchTasks();\n  };\n  const deleteTask = async id => {\n    await API.delete(`/tasks/${id}`);\n    fetchTasks();\n  };\n  useEffect(() => {\n    if (!localStorage.getItem('token')) navigate('/login');else fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Title\",\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Description\",\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateTask(task.id, !task.isComplete),\n        children: task.isComplete ? 'Mark Incomplete' : 'Mark Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Tasks, \"NH8FQiz1TljC4H05Ut5GwCf56zI=\", false, function () {\n  return [useNavigate];\n});\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","useEffect","API","useNavigate","jsxDEV","_jsxDEV","Tasks","_s","tasks","setTasks","title","setTitle","description","setDescription","navigate","fetchTasks","res","get","data","addTask","post","updateTask","id","isComplete","put","deleteTask","delete","localStorage","getItem","children","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","task","_c","$RefreshReg$"],"sources":["/Users/keshavdave/Desktop/Keshav_Dave_FullStackCodingChallenge_Lumaa/frontend/src/components/Tasks.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport API from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Task {\n  id: number;\n  title: string;\n  description: string;\n  isComplete: boolean;\n}\n\nfunction Tasks() {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const navigate = useNavigate();\n\n  const fetchTasks = async () => {\n    const res = await API.get('/tasks');\n    setTasks(res.data);\n  };\n\n  const addTask = async () => {\n    await API.post('/tasks', { title, description });\n    fetchTasks();\n  };\n\n  const updateTask = async (id: number, isComplete: boolean) => {\n    await API.put(`/tasks/${id}`, { isComplete });\n    fetchTasks();\n  };\n\n  const deleteTask = async (id: number) => {\n    await API.delete(`/tasks/${id}`);\n    fetchTasks();\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem('token')) navigate('/login');\n    else fetchTasks();\n  }, []);\n\n  return (\n    <div>\n      <input placeholder=\"Title\" onChange={(e) => setTitle(e.target.value)} />\n      <input placeholder=\"Description\" onChange={(e) => setDescription(e.target.value)} />\n      <button onClick={addTask}>Add Task</button>\n      {tasks.map((task) => (\n        <div key={task.id}>\n          <h3>{task.title}</h3>\n          <p>{task.description}</p>\n          <button onClick={() => updateTask(task.id, !task.isComplete)}>\n            {task.isComplete ? 'Mark Incomplete' : 'Mark Complete'}\n          </button>\n          <button onClick={() => deleteTask(task.id)}>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Tasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}