{"ast":null,"code":"import{useState,useEffect}from'react';import API from'../services/api';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Tasks(){const[tasks,setTasks]=useState([]);const[title,setTitle]=useState('');const[description,setDescription]=useState('');const navigate=useNavigate();const fetchTasks=async()=>{const res=await API.get('/tasks');setTasks(res.data);};const addTask=async()=>{await API.post('/tasks',{title,description});fetchTasks();};const updateTask=async(id,isComplete)=>{await API.put(`/tasks/${id}`,{isComplete});fetchTasks();};const deleteTask=async id=>{await API.delete(`/tasks/${id}`);fetchTasks();};useEffect(()=>{if(!localStorage.getItem('token'))navigate('/login');else fetchTasks();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{placeholder:\"Title\",onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{placeholder:\"Description\",onChange:e=>setDescription(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:addTask,children:\"Add Task\"}),tasks.map(task=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:task.title}),/*#__PURE__*/_jsx(\"p\",{children:task.description}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>updateTask(task.id,!task.isComplete),children:task.isComplete?'Mark Incomplete':'Mark Complete'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteTask(task.id),children:\"Delete\"})]},task.id))]});}export default Tasks;","map":{"version":3,"names":["useState","useEffect","API","useNavigate","jsx","_jsx","jsxs","_jsxs","Tasks","tasks","setTasks","title","setTitle","description","setDescription","navigate","fetchTasks","res","get","data","addTask","post","updateTask","id","isComplete","put","deleteTask","delete","localStorage","getItem","children","placeholder","onChange","e","target","value","onClick","map","task"],"sources":["/Users/keshavdave/Desktop/Keshav_Dave_FullStackCodingChallenge_Lumaa/frontend/src/components/Tasks.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport API from '../services/api';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Task {\n  id: number;\n  title: string;\n  description: string;\n  isComplete: boolean;\n}\n\nfunction Tasks() {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const navigate = useNavigate();\n\n  const fetchTasks = async () => {\n    const res = await API.get('/tasks');\n    setTasks(res.data);\n  };\n\n  const addTask = async () => {\n    await API.post('/tasks', { title, description });\n    fetchTasks();\n  };\n\n  const updateTask = async (id: number, isComplete: boolean) => {\n    await API.put(`/tasks/${id}`, { isComplete });\n    fetchTasks();\n  };\n\n  const deleteTask = async (id: number) => {\n    await API.delete(`/tasks/${id}`);\n    fetchTasks();\n  };\n\n  useEffect(() => {\n    if (!localStorage.getItem('token')) navigate('/login');\n    else fetchTasks();\n  }, []);\n\n  return (\n    <div>\n      <input placeholder=\"Title\" onChange={(e) => setTitle(e.target.value)} />\n      <input placeholder=\"Description\" onChange={(e) => setDescription(e.target.value)} />\n      <button onClick={addTask}>Add Task</button>\n      {tasks.map((task) => (\n        <div key={task.id}>\n          <h3>{task.title}</h3>\n          <p>{task.description}</p>\n          <button onClick={() => updateTask(task.id, !task.isComplete)}>\n            {task.isComplete ? 'Mark Incomplete' : 'Mark Complete'}\n          </button>\n          <button onClick={() => deleteTask(task.id)}>Delete</button>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Tasks;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,GAAG,KAAM,iBAAiB,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAS/C,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACf,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAS,EAAE,CAAC,CAC9C,KAAM,CAACW,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACa,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAAAe,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAa,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAf,GAAG,CAACgB,GAAG,CAAC,QAAQ,CAAC,CACnCR,QAAQ,CAACO,GAAG,CAACE,IAAI,CAAC,CACpB,CAAC,CAED,KAAM,CAAAC,OAAO,CAAG,KAAAA,CAAA,GAAY,CAC1B,KAAM,CAAAlB,GAAG,CAACmB,IAAI,CAAC,QAAQ,CAAE,CAAEV,KAAK,CAAEE,WAAY,CAAC,CAAC,CAChDG,UAAU,CAAC,CAAC,CACd,CAAC,CAED,KAAM,CAAAM,UAAU,CAAG,KAAAA,CAAOC,EAAU,CAAEC,UAAmB,GAAK,CAC5D,KAAM,CAAAtB,GAAG,CAACuB,GAAG,CAAC,UAAUF,EAAE,EAAE,CAAE,CAAEC,UAAW,CAAC,CAAC,CAC7CR,UAAU,CAAC,CAAC,CACd,CAAC,CAED,KAAM,CAAAU,UAAU,CAAG,KAAO,CAAAH,EAAU,EAAK,CACvC,KAAM,CAAArB,GAAG,CAACyB,MAAM,CAAC,UAAUJ,EAAE,EAAE,CAAC,CAChCP,UAAU,CAAC,CAAC,CACd,CAAC,CAEDf,SAAS,CAAC,IAAM,CACd,GAAI,CAAC2B,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAEd,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAClD,CAAAC,UAAU,CAAC,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,mBACET,KAAA,QAAAuB,QAAA,eACEzB,IAAA,UAAO0B,WAAW,CAAC,OAAO,CAACC,QAAQ,CAAGC,CAAC,EAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAAE,CAAC,cACxE9B,IAAA,UAAO0B,WAAW,CAAC,aAAa,CAACC,QAAQ,CAAGC,CAAC,EAAKnB,cAAc,CAACmB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAAE,CAAC,cACpF9B,IAAA,WAAQ+B,OAAO,CAAEhB,OAAQ,CAAAU,QAAA,CAAC,UAAQ,CAAQ,CAAC,CAC1CrB,KAAK,CAAC4B,GAAG,CAAEC,IAAI,eACd/B,KAAA,QAAAuB,QAAA,eACEzB,IAAA,OAAAyB,QAAA,CAAKQ,IAAI,CAAC3B,KAAK,CAAK,CAAC,cACrBN,IAAA,MAAAyB,QAAA,CAAIQ,IAAI,CAACzB,WAAW,CAAI,CAAC,cACzBR,IAAA,WAAQ+B,OAAO,CAAEA,CAAA,GAAMd,UAAU,CAACgB,IAAI,CAACf,EAAE,CAAE,CAACe,IAAI,CAACd,UAAU,CAAE,CAAAM,QAAA,CAC1DQ,IAAI,CAACd,UAAU,CAAG,iBAAiB,CAAG,eAAe,CAChD,CAAC,cACTnB,IAAA,WAAQ+B,OAAO,CAAEA,CAAA,GAAMV,UAAU,CAACY,IAAI,CAACf,EAAE,CAAE,CAAAO,QAAA,CAAC,QAAM,CAAQ,CAAC,GANnDQ,IAAI,CAACf,EAOV,CACN,CAAC,EACC,CAAC,CAEV,CAEA,cAAe,CAAAf,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}